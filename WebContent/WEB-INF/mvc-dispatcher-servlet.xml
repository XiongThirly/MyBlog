<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans     
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
        http://www.springframework.org/schema/aop 
       http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
	<!-- 配置自动扫描 -->
	<context:component-scan base-package="com.myblog.*" />
	<mvc:annotation-driven />


	<!--配置静态文件 -->
	<mvc:resources mapping="/static/**/*" location="/static/" />


	<!-- 自定拦截器，控制用户访问的权限 -->
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/pages/**/*" />
		
			<bean id="loginInterceptor" class="com.myblog.filter.SecurityFilter" />
		</mvc:interceptor>
	</mvc:interceptors>


	<!-- aop -->
	<bean id="logService" class="com.myblog.log.SysLogAspect"></bean>
	<bean id="pageService" class="com.myblog.page.pageAspect"></bean>

	<aop:aspectj-autoproxy/>
 
	<!-- 启动对@AspectJ注解的支持 -->
	<aop:aspectj-autoproxy proxy-target-class="true" />


	<!--Spring MVC使用ViewResolver来根据controller中返回的view名关联到具体的View对象。 使用View对象来渲染返回值以生成最终的视图，如html,json或pdf等 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix">
			<value>/WEB-INF/pages/</value>
		</property>
		<property name="suffix">
			<value>.jsp</value>
		</property>
	</bean>
<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
        <property name="defaultEncoding" value="UTF-8"/>
        <!-- 指定所上传文件的总大小不能超过6M。注意maxUploadSize属性的限制不是针对单个文件，而是所有文件的容量之和 -->  
        <property name="maxUploadSize" value="6291456"/>
        <property name="resolveLazily" value="true"/>
    </bean>
</beans>



